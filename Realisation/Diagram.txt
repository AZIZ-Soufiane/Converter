┌───────────────────────────────────────────────┐
│               ConverterInterface              │
├───────────────────────────────────────────────┤
│ +toBinary(): string                            │
│ +toHex(): string                               │
│ +fromBinary(bin: string): int                  │
│ +fromHex(hex: string): int                     │
└───────────────────────────────────────────────┘
        ▲
        │ implements
        │
┌───────┴───────────────────────┐
│           Converter           │
├───────────────────────────────┤
│ -number: int                  │
├───────────────────────────────┤
│ +__construct(number: int)     │
│ +toBinary(): string           │
│ +toHex(): string              │
│ +fromBinary(bin: string): int │
│ +fromHex(hex: string): int    │
└───────────────────────────────┘


┌──────────────────────────────────────────┐
│           CalculatorInterface            │
├──────────────────────────────────────────┤
│ +andOp(): int                            │
│ +orOp(): int                             │
│ +xorOp(): int                            │
│ +notOp(): int                            │
│ +shiftLeft(bits: int): int               │
│ +shiftRight(bits: int): int              │
└──────────────────────────────────────────┘
        ▲
        │ implements
        │
┌───────┴──────────────────────┐
│           Calculator          │
├───────────────────────────────┤
│ -a: int                       │
│ -b: int                       │
│ -results: array               │
├───────────────────────────────┤
│ +__construct(a: int, b: int)  │
│ +andOp(): int                 │
│ +orOp(): int                  │
│ +xorOp(): int                 │
│ +notOp(): int                 │
│ +shiftLeft(bits: int): int    │
│ +shiftRight(bits: int): int   │
│ +getResults(): array          │
└───────────────────────────────┘
        ▲
        │ uses
        │
┌───────┴─────────────────────────────┐
│             BitwiseTrait             │
├─────────────────────────────────────┤
│ -cleanData(data: array): array      │
│ -shift(num: int, bits: int, dir: string): int │
└─────────────────────────────────────┘


┌──────────────────────────────────────────┐
│             CliApplication               │
├──────────────────────────────────────────┤
│ +run(args: array): void                  │
│ +validateInputs(args: array): array      │
│ +printResults(results: array): void      │
└──────────────────────────────────────────┘
        ▲
        │ uses
        │
┌───────┴──────────────────────────────┐
│               Helpers                │
├──────────────────────────────────────┤
│ +sanitizeInput(input: string): int   │
│ +formatBinary(num: int): string      │
│ +formatTable(data: array): string    │
└──────────────────────────────────────┘




Relationships Between Classes & Components

- Converter implements ConverterInterface
Provides methods to convert integers to binary/hexadecimal and vice versa.

- Calculator implements CalculatorInterface
Performs bitwise operations (AND, OR, XOR, NOT, shifts).

- Calculator uses BitwiseTrait
BitwiseTrait contains reusable low-level helper methods (cleanData, shift logic).

- CliApplication uses Calculator and Converter
Orchestrates input validation, calls Calculator to perform operations, and uses Converter to display results in binary/hexadecimal.

- CliApplication uses Helpers
Helpers contain procedural/closure functions for input sanitization, formatting binary output, and building result tables.

- Composer autoload ties everything together, allowing PSR-4 compliant class loading.